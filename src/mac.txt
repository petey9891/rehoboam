// GLFWwindow* InitWindow() {
// 	// Initialise GLFW
// 	if (!glfwInit()) {
//         int errorCode;
//         const char* description;
//         while ((errorCode = glfwGetError(&description)) != GLFW_NO_ERROR) {
//             printf("Error code: %d\n", errorCode);
//             printf("Message: %s\n", description);
//         }
// 		fprintf( stderr, "Failed to initialize GLFW\n" );
// 		getchar();
// 		return nullptr;
// 	}


// 	glfwWindowHint(GLFW_SAMPLES, 4);
// 	glfwWindowHint(GLFW_CONTEXT_VERSION_MAJOR, 3);
// 	glfwWindowHint(GLFW_CONTEXT_VERSION_MINOR, 3);
// 	glfwWindowHint(GLFW_OPENGL_FORWARD_COMPAT, GL_TRUE); // To make MacOS happy; should not be needed
// 	glfwWindowHint(GLFW_OPENGL_PROFILE, GLFW_OPENGL_CORE_PROFILE);
//     glfwWindowHint(GLFW_VISIBLE, GLFW_FALSE);

//     // Open a window and create its OpenGL context
//     GLFWwindow* window = glfwCreateWindow(1024, 768, "OpenGLSandbox", NULL, NULL);
// 	if(window == nullptr) {
// 		fprintf( stderr, "Failed to open GLFW window. If you have an Intel GPU, they are not 3.3 compatible. Try the 2.1 version of the tutorials.\n" );
// 		getchar();
// 		glfwTerminate();
// 		return nullptr;
// 	}
// 	glfwMakeContextCurrent(window);

//     glfwSwapInterval(1); // Syncs with refresh rate

//     // Initialize GLEW
// 	glewExperimental = true; // Needed for core profile
// 	if (glewInit() != GLEW_OK) {
// 		fprintf(stderr, "Failed to initialize GLEW\n");
// 		getchar();
// 		glfwTerminate();
// 		return nullptr;
// 	}

    // printf("Using OpenGL Version: %s\n", glGetString(GL_VERSION) );

// 	// Ensure we can capture the escape key being pressed below
// 	glfwSetInputMode(window, GLFW_STICKY_KEYS, GL_TRUE);

//     return window;
// }